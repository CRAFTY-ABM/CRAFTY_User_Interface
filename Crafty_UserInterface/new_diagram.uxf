<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>592</x>
      <y>24</y>
      <w>360</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.cameraTools::Camera
--
+cameraTransform = new CameraTransformer(): CameraTransformer
+mousePosX: double
+mousePosY: double
-mouseOldX: double
-mouseOldY: double
-mouseDeltaX: double
-mouseDeltaY: double
--
+Camera(): ctor
+cameraKeyCodeControl(SubScene subScene): void
+defaultcamera(Group root, SubScene subScene): void
+adjustCamera(Group canvasGroup, SubScene subScene): void
+cameraMousControl(SubScene scene): void
+newzoom(SubScene scene): void
+cameraFocusBox(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>24</y>
      <w>384</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.cameraTools::CameraTransformer
--
+t = new Translate(): Translate
+p = new Translate(): Translate
+ip = new Translate(): Translate
+rx = new Rotate(): Rotate
+ry = new Rotate(): Rotate
+rz = new Rotate(): Rotate
+s = new Scale(): Scale
--
+CameraTransformer(): ctor
+CameraTransformer(CameraTransformer.RotateOrder rotateOrder): ctor
+setTranslate(double x, double y, double z): void
+setTranslate(double x, double y): void
+setTx(double x): void
+setTy(double y): void
+setTz(double z): void
+setRotate(double x, double y, double z): void
+setRotateX(double x): void
+setRotateY(double y): void
+setRotateZ(double z): void
+setRx(double x): void
+setRy(double y): void
+setRz(double z): void
+setScale(double scaleFactor): void
+setScale(double x, double y, double z): void
+setSx(double x): void
+setSy(double y): void
+setSz(double z): void
+setPivot(double x, double y, double z): void
+reset(): void
+resetTSP(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>512</y>
      <w>400</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.filesTools::CsvTools
--
--
+csvReader(String filePath): String[][]
+lineFromscsv(int lineNumber, String path): String[]
+lineFromscsvHash(int lineNumber, String path): HashMap&lt;String, String&gt;
+ReadAsaHash(String filePath): HashMap&lt;String, String[]&gt;
+tmp(): void
+csvReaderDouble(String filePath): double[][]
+columnFromscsv(int colunNumber, String path): String[]
+columnFromsMatrix(int colunNumber, String[][] csvR): String[]
+columnindexof(String[] list): HashMap&lt;String, Integer&gt;
+writeCSVfile(String[][] tabl, String filePath): void
+writeNewLineCSVfile(String filePath, int lineNumber, String... content): void
+ModefieOneElementCSVFile(int i, int j, String newValue, String filePath): void
+addRefProductionInBehvoirFileFullPath(String folderPath): void
+detectFiles(String folderPath): List&lt;File&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>608</x>
      <y>512</y>
      <w>432</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.filesTools::PathTools
--
--
+findFolder(final File folder, boolean onlyFolder): ArrayList&lt;String&gt;
+findFolder(final File folder, String condition, boolean onlyFolder): ArrayList&lt;String&gt;
~creatListPath(final File folder, ArrayList&lt;String&gt; Listpathe): void
+findAllFile(String path): ArrayList&lt;String&gt;
+read(String filePath): String
+selecFolder(String projectPath): File
+selecFile(String projectPath): File
+writeFile(String path, String text, boolean keepTxt): void
+writePathRecentProject(String path, String text): void
+detectFolders(String folderPath): List&lt;File&gt;
+makeDirectory(String dir): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>752</y>
      <w>160</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.filesTools::SaveAs
--
--
+png(Node node): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>848</y>
      <w>408</w>
      <h>304</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.graphicalTools::ColorsTools
--
+colorPaletteType = "Default": String
--
+colorlist(int nbr): Color
+toHex(Color color): String
+getColorForValue(double MAX, double value): Color
+color(int nbr): Stop[]
+RandomColor(): Color
+getStringColor(Color color): String
~YellowToGreen(double MAX, double value): Color
~Grayscale(double MAX, double value): Color
~Rainbow(double MAX, double value): Color
~RedToYellow(double MAX, double value): Color
~GreenToBrown(double MAX, double value): Color
~Viridis(double MAX, double value): Color
~Plasma(double MAX, double value): Color
+colorPalette(double value): Color
+colorPalette(double MAX, double value): Color
+RadioList(Consumer&lt;RadioButton&gt; action, String... r): ArrayList&lt;RadioButton&gt;
+windowzpalette(NewWindow win): void
-drawLegend(Pane legendPane): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>1160</y>
      <w>584</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.graphicalTools::CSVTableView
--
--
+newtable(String[][] data, Consumer&lt;String&gt; action): TableView&lt;ObservableList&lt;String&gt;&gt;
+newtable(String[][] data): TableView&lt;ObservableList&lt;String&gt;&gt;
+newtable(String file): TableView&lt;ObservableList&lt;String&gt;&gt;
+updateTableView(String[][] data, Consumer&lt;String&gt; action, TableView&lt;ObservableList&lt;String&gt;&gt; tableView): void
~editable(String[][] data, Consumer&lt;String&gt; action, TableView&lt;ObservableList&lt;String&gt;&gt; tableView): void
+tableViewToArray(TableView&lt;ObservableList&lt;String&gt;&gt; tableView): String[][]
+tableViewToMap(TableView&lt;ObservableList&lt;String&gt;&gt; tableView): Map&lt;String, String[]&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>792</x>
      <y>1160</y>
      <w>256</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.graphicalTools::Console
--
-output: TextArea
--
+Console(TextArea ta): ctor
+start(): TextArea
-appendText(TextArea textArea, String text): void
+captureOutput(TextArea console): void
+write(int i): void
+write(byte[] b, int off, int len): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>1448</y>
      <w>608</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.graphicalTools::Histogram
--
--
+histo(Pane box, String name, BarChart&lt;String, Number&gt; histogram, Set&lt;Double&gt; values): BarChart&lt;String, Number&gt;
+histo(Pane box, String name, BarChart&lt;String, Number&gt; histogram, HashMap&lt;String, Double&gt; hash): void
+countNumbersInIntervals(Set&lt;Double&gt; numbers, int intervalNBR): List&lt;Integer&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1072</x>
      <y>848</y>
      <w>536</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.graphicalTools::LineChartTools
--
~lineChart: LineChart&lt;Number, Number&gt;
-debounceTimer: PauseTransition
--
+lineChart(Pane box, LineChart&lt;Number, Number&gt; lineChart, HashMap&lt;String, double[]&gt; hash): void
+graph(Pane box, String titel, HashMap&lt;String, Number[]&gt; hash, NumberAxis X, NumberAxis Y): Node
+radioButtonToggled(XYChart.Series&lt;Number, Number&gt; series, boolean isSelected): void
-addSeriesToChart(XYChart.Series&lt;Number, Number&gt; series): void
-removeSeriesFromChart(XYChart.Series&lt;Number, Number&gt; series): void
+gridCahrt(int nbrInChart, GridPane gridPane, ArrayList&lt;LineChart&lt;Number, Number&gt;&gt; lineChart): void
+labelcolor(LineChart&lt;Number, Number&gt; lineChart): void
+graph(Pane box, String titel, HashMap&lt;String, Number[]&gt; hash): Node
+graph(Pane box, String titel, HashMap&lt;String, Number[]&gt; hash, NumberAxis X): Node
+Chartupdate(Pane box, LineChart&lt;Number, Number&gt; lineChart, HashMap&lt;String, double[]&gt; hash): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>816</x>
      <y>1448</y>
      <w>528</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.graphicalTools::MousePressed
--
--
+mouseControle(Pane pane, Node node): void
+mouseControle(Pane box, Node node, HashMap&lt;String, Consumer&lt;String&gt;&gt; othersMenuItems): void
~smartMenu(Node node, HashMap&lt;String, Consumer&lt;String&gt;&gt; hash): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1200</x>
      <y>1312</y>
      <w>408</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.graphicalTools::NewWindow
--
--
+creatwindows(String name, double Width, double Height, Node... nodes): void
+creatwindows(String name, Node... nodes): void
+creatwindows(String name, Node nodes, Consumer&lt;Stage&gt; action): void
+subSceneWithCamera(BorderPane rootPane, Node... nodes): SubScene
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1056</x>
      <y>1160</y>
      <w>624</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.graphicalTools::PieChartTools
--
~data = new ArrayList(): ArrayList&lt;PieChart.Data&gt;
--
+updateChart(HashMap&lt;String, Double&gt; hash, PieChart chart): void
+updateChart(HashMap&lt;String, Double&gt; hash, HashMap&lt;String, Color&gt; color, PieChart chart, boolean isInteractive): void
+updateChart(MapLoader M, HashMap&lt;String, Double&gt; hash, HashMap&lt;String, Color&gt; color, PieChart chart): void
~legendColorStatic(HashMap&lt;String, Color&gt; color, PieChart chart): void
~legendColorPicker(HashMap&lt;String, Color&gt; color, PieChart chart): void
~legendColorPicker(MapLoader M, HashMap&lt;String, Color&gt; color, PieChart chart): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>616</x>
      <y>848</y>
      <w>448</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.graphicalTools::Tools
--
--
+vBox(Node... children): VBox
+hBox(Node... children): HBox
+button(String string, String color): Button
+slider(double a, double b, double d): Slider
+choiceBox(ArrayList&lt;String&gt; list): ChoiceBox&lt;String&gt;
+getKeysInSortedOrder(HashMap&lt;String, Double&gt; map): List&lt;String&gt;
+T(String name, boolean isopen, Node... children): TitledPane
+grid(double hGap, double vGap): GridPane
+text(String txt, Color color): Text
+sToD(String str): double
+reinsertChildAtIndexPath(Node child, Parent rootParent, List&lt;Integer&gt; indexPath): void
+findIndexPath(Node child, Parent parent): List&lt;Integer&gt;
+indexof(String s, String[] tmp): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>1312</y>
      <w>992</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.graphicalTools::WarningWindowes
--
~p = "": String
--
+alterErrorNotFileFound(String path): String
+alterError(String headerText, HashMap&lt;String, Consumer&lt;ButtonType&gt;&gt; hash): Alert
+showWarningMessage(String message, String okbuttonName, Consumer&lt;String&gt; Retry, String cancelbuttonName, Consumer&lt;String&gt; continuAnyWay): void
+showWarningMessage(String message, String okbuttonName, Consumer&lt;String&gt; okbuttonConsumer, String cancelbuttonName, Consumer&lt;String&gt; continuAnyWay, List&lt;String&gt; listWarning): void
+showWaitingDialog(Consumer&lt;String&gt; action): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>752</x>
      <y>1592</y>
      <w>280</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>dataLoader::Agents
--
+aftReSet = new HashMap(): HashMap&lt;String, AFT&gt;
--
+agentsColorinitialisation(): void
+updateColorsInputData(): void
+initializeAFTs(): void
+updateAFTs(): void
+initializeAFTBehevoir(String aftPath): void
+updateAFTBehevoir(AFT a, File file): void
+initializeAFTProduction(String aftPath): void
+updateAFTProduction(AFT a, File file): void
+hashAgentNbr(): HashMap&lt;String, Double&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>1968</y>
      <w>376</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>dataLoader::MapLoader
--
+demand = new HashMap(): HashMap&lt;String, double[]&gt;
--
+loadMap(): void
+ResetMap(): void
+updateDemand(): void
~loadBaselineCapital(String... findBaseLine): HashMap&lt;String, String[]&gt;
+loadCapitalsAndServiceList(): void
+loadGisData(): void
+updateCapitals(int year): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>1592</y>
      <w>544</w>
      <h>368</h>
    </coordinates>
    <panel_attributes>dataLoader::Path
--
+minFoldersNaisserly = { "agents", "csv", "production", "worlds", "GIS", "institutions", "lara", "xml" }: String[]
+startYear = 2020: int
+endtYear = 2080: int
+currentYear = startYear: int
+recentProjectPath = "": String
+projectPath = "": String
+scenariosList = new ArrayList(): ArrayList&lt;String&gt;
+worldNameList = new ArrayList(): ArrayList&lt;String&gt;
+referqnceWorld: String
+AllfilePatheInData: ArrayList&lt;String&gt;
+scenario: String
+production: String
+version: String
--
+initialisation(String str): void
+pathWithconditions(): ArrayList&lt;String&gt;
+fileFilter(String... condition): ArrayList&lt;String&gt;
+getProjectPath(): String
+checkfolders(String path): List&lt;String&gt;
+getProduction(): String
+setProduction(String production): void
+getversion(): String
+setversion(String version): void
+getSenario(): String
+setSenario(String senario): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>424</x>
      <y>2160</y>
      <w>240</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>main::FxMain
--
+camera = new Camera(): Camera
+subScene: SubScene
+root = new Group(): Group
+imageView = new ImageView(): ImageView
+primaryStage: Stage
--
+start(Stage primaryStage): void
+main(String[] args): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>2160</y>
      <w>216</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>main::MutationExperiences
--
~M = new MapLoader(): MapLoader
--
+importSpace(): void
+creatRandomAFTs(int nbrOfAFTs): void
~selectWinnersAndInitialiseNextRun(): void
+asosieteRandomAAFTTocells(): void
~run(int simNBR): void
~writeProduction(String dir): void
~writOutPut(String dir): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>2320</y>
      <w>200</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>main::OpenTabs
--
~M: MapLoader
+vbox = new VBox(): VBox
+choiceScenario: ChoiceBox&lt;String&gt;
+year: ChoiceBox&lt;String&gt;
--
+OpenTabs(): ctor
+senarioPane(): void
~globalBox(): HBox
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>960</x>
      <y>2504</y>
      <w>752</w>
      <h>248</h>
    </coordinates>
    <panel_attributes>model::AFT
--
+label: String
+name: String
+sensitivty = new HashMap(): HashMap&lt;String, Double&gt;
+productivityLevel = new HashMap(): HashMap&lt;String, Double&gt;
+giveInMean = 0, giveInSD = 0, giveUpMean = 0, giveUpSD = 0, serviceLevelNoiseMin = 0, serviceLevelNoiseMax = 0, giveUpProbabilty = 0: double
+color: Color
--
+AFT(String label): ctor
+AFT(AFT other): ctor
+AFT(): ctor
+AFT(AFT other, double intervale): ctor
+AFT(String label, double LevelIntervale): ctor
+landStored(// should be delete and remplace by production in cell&#13;
Cell C): // should be delete and remplace by production in cell&#13;
void
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>2504</y>
      <w>416</w>
      <h>368</h>
    </coordinates>
    <panel_attributes>model::Cell
--
+size = 5: int
+x: int
+y: int
+capitals = new HashMap(): HashMap&lt;String, Double&gt;
+services = new HashMap(): HashMap&lt;String, Double&gt;
+owner: AFT
+tmpValueCell = 0: double
+index: int
+GIS = new HashMap(): HashMap&lt;String, String&gt;
+GISNames = new ArrayList(): List&lt;String&gt;
+color = Color.TRANSPARENT: Color
--
+Cell(int x, int y): ctor
+ColorP(Color color): void
+ColorP(): void
+ColorP(GraphicsContext gc, Color color): void
+prodactivity(AFT a, String serviceName): double
~utility(AFT a): double
~Competition(AFT competitor, boolean ismutated, double mutationInterval): void
~newOwner(AFT agent, boolean ismutated, double intervale): AFT
~putservices(): void
~checkNeighboorSameLabel(): void
~neighborhoodOnAction(Consumer&lt;Cell&gt; action): void
~getMooreNeighborhood(): Set&lt;Cell&gt;
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>2880</y>
      <w>240</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>model::Lattice
--
+canvas: Canvas
+gc: GraphicsContext
+maxX, maxY: int
+regioneselected = "Regions": String
+colortype = "FR": String
+C: Set&lt;Cell&gt;
+hashCell: HashMap&lt;String, Cell&gt;
+capitalsName = new ArrayList(): List&lt;String&gt;
+servicesNames = new ArrayList(): List&lt;String&gt;
--
+plotCells(): void
+colorMap(String str): void
+colorMap(): void
+MapControlerBymouse(): void
+selectZone(Cell patch, String zonetype): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>624</x>
      <y>2504</y>
      <w>328</w>
      <h>344</h>
    </coordinates>
    <panel_attributes>model::Rules
--
+M = new MapLoader(): MapLoader
+colorDisplay = "FR": String
+mapSynchronisation = true: boolean
+writeCsvFiles = false: boolean
+removeNegative = false: boolean
+usegiveUp = false: boolean
+isMutated = false: boolean
+NeighboorEffect = false: boolean
+percentageCells = 0.05: double
+mutationIntval = 0.1: double
+supply: HashMap&lt;String, Double&gt;
~marginal = new HashMap(): HashMap&lt;String, Double&gt;
+distributionMean: HashMap&lt;String, Double&gt;
+compositionAFT: String[][]
+servicedemand: String[][]
--
+Rules(MapLoader M): ctor
~calculeSystemSupply(): void
~calculeDistributionMean(): void
~calculeMarginalUtility(int year, boolean removeNegative): void
+go(int year, String outPutFolderName): void
~outPutToCsv(int year, String outPutFolderName): void
~writOutPutMap(int year, String folderName): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>3152</y>
      <w>496</w>
      <h>248</h>
    </coordinates>
    <panel_attributes>panes::AFT_Configuration
--
~vbox = new VBox(): VBox
+choiceAgnet: ChoiceBox&lt;String&gt;
--
+pane(): Tab
~colorland(AFT a): void
~showOnlyOneAFT(AFT a): void
~sensitivityTable(AFT a): String[][]
~productionTable(AFT a): String[][]
~agentPane(AFT agent): Pane
~chartBox(AFT agent, int nbrColumn): ScrollPane
~AgentParametre(AFT agent, GridPane grid): void
~updateSensitivty(AFT newAFT, GridPane grid, TableView&lt;ObservableList&lt;String&gt;&gt; tabV): void
~ubdateRadarchart(AFT newAFT, GridPane grid): void
~updateProduction(AFT newAFT, TableView&lt;ObservableList&lt;String&gt;&gt; tabV): void
~creatCsvFiles(AFT a, String descreption): void
+ychart(Pane box, AFT agent, String servicesName): YChart&lt;ValueChartItem&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>608</x>
      <y>3448</y>
      <w>312</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>panes::CellWindow
--
~patch: Cell
--
+CellWindow(Cell patch): ctor
+windosLocalInfo(): void
~cellDataTable(): TableView&lt;ObservableList&lt;String&gt;&gt;
~sspData(String senario): HashMap&lt;String, Number[]&gt;
~outputData(): HashMap&lt;String, Number[]&gt;[]
+toString(): String
~RCPi_SSPiCapital(String Path): HashMap&lt;String, Double&gt;
~RCPi_SSPiService(String Path): HashMap&lt;String, Double&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1024</x>
      <y>3152</y>
      <w>504</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>panes::DataDisplay
--
~pieChartColorAFts: PieChart
~M: MapLoader
+tab: Tab
+graphDemand: Pane
+winColor = new NewWindow(): NewWindow
+radioColor: RadioButton[]
+histogrameCapitalFequency: BarChart&lt;String, Number&gt;
+vbox = new VBox(): VBox
--
+DataDisplay(MapLoader M): ctor
+colorWorld(): Tab
+histogrameCapitals(BarChart&lt;String, Number&gt; histograme, String year, String capitalName): void
~updatePieChartColorAFts(MapLoader M, PieChart chart): void
+graphDemand(): Pane
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>632</x>
      <y>3640</y>
      <w>128</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>panes::GlobalView
--
--
+globaldataview(): Tab
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>3640</y>
      <w>264</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>panes::MenuBAR
--
--
+MenuBAR(): ctor
-restartApplication(): void
~openWebInBrowser(): void
-updateRecentFilesMenu(Menu recentMenu): void
~openProject(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>472</x>
      <y>3640</y>
      <w>152</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>panes::NewAftPane
--
~vbox = new VBox(): VBox
--
+addaft(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>3448</y>
      <w>400</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>panes::OutPutPane
--
~M: MapLoader
~outputpath = "": String
~radioColor: RadioButton[]
~vbox = new VBox(): VBox
--
+OutPutPane(MapLoader M): ctor
+pane(): Tab
~newOutPut(String year): void
~Graphs(GridPane gridPane): void
~updatComposition(String path, String nameFile): HashMap&lt;String, double[]&gt;
+servicesAndOwner(String year): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>3152</y>
      <w>312</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>panes::Region
--
~canvas: Canvas
+patchsInRergion = new HashSet(): Set&lt;Cell&gt;
+patchCopy = new HashSet(): Set&lt;Rectangle&gt;
~rectToPach = new HashMap(): HashMap&lt;Rectangle, Cell&gt;
~window = new NewWindow(): NewWindow
~root = new Group(): Group
~subScene: SubScene
~camera = new Camera(): Camera
~scene: Scene
~rootPane = new BorderPane(): BorderPane
~gc: GraphicsContext
--
+RegionWindow(): void
~CreatGegionalMap(Group g): void
+colorMap(String name): void
+colorWorld(): TitledPane
~updateChart(): PieChart
~statisticAvregeCapital(): HBox
+creatMenu(): HashMap&lt;String, Consumer&lt;String&gt;&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>3640</y>
      <w>360</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>panes::RunConfiguration
--
--
+runConfiguration(RunPane CA, NewWindow runConfiguration): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>928</x>
      <y>3448</y>
      <w>376</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>panes::RunPane
--
~R: Rules
~timeline: Timeline
~outPutFolderName: String
~vbox = new VBox(): VBox
+chartSynchronisation = true: boolean
--
+RunPane(MapLoader M): ctor
+pane(): Tab
~initilaseChart(ArrayList&lt;LineChart&lt;Number, Number&gt;&gt; lineChart): void
~RunName(): Alert
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>192</x>
      <y>0</y>
      <w>768</w>
      <h>480</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.cameraTools
fg=PINK
bg=PINK</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>192</x>
      <y>488</y>
      <w>856</w>
      <h>328</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.filesTools
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>192</x>
      <y>824</y>
      <w>1496</w>
      <h>736</h>
    </coordinates>
    <panel_attributes>UtilitiesFx.graphicalTools
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>192</x>
      <y>1568</y>
      <w>848</w>
      <h>560</h>
    </coordinates>
    <panel_attributes>dataLoader
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>192</x>
      <y>2136</y>
      <w>480</w>
      <h>336</h>
    </coordinates>
    <panel_attributes>main
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>192</x>
      <y>2480</y>
      <w>1528</w>
      <h>640</h>
    </coordinates>
    <panel_attributes>model
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>192</x>
      <y>3128</y>
      <w>1344</w>
      <h>640</h>
    </coordinates>
    <panel_attributes>panes
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
