<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.cesr</groupId>
        <artifactId>CraftyProject</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../CraftyProject/pom.xml</relativePath>
    </parent>

    <artifactId>crafty-gui</artifactId>
    <packaging>jar</packaging>
    <name>crafty-gui</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- JavaFX version should match your SDK -->
        <javafx.version>24</javafx.version>
        <!-- Version of the javafx-maven-plugin -->
        <javafx.maven.plugin.version>0.0.8</javafx.maven.plugin.version>
        <!-- Specify platform classifier (win, mac, linux) -->
        <javafx.platform>win</javafx.platform>
        <!-- Adjust this to your Java version. For example 11, 17, etc. -->
        <maven.compiler.release>17</maven.compiler.release>
    </properties>

    <build>
        <plugins>
            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <!-- Use maven.compiler.release to manage both source and target -->
                    <release>${maven.compiler.release}</release>
                </configuration>
            </plugin>
            
            <!-- JavaFX Maven Plugin -->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>${javafx.maven.plugin.version}</version>
                <configuration>
                    <!-- Specify your main class here -->
                    <mainClass>de.cesr.crafty.gui.main.FxMain</mainClass>
                    <!--        <jvmArgs> headless</jvmArgs>
                        If you need extra VM arguments (e.g. headless mode), you can add them:
                        <jvmArgs> headless</jvmArgs>
                        Note: With JavaFX modules added as Maven dependencies, the plugin automatically sets the module-path.
                    -->
                </configuration>
                <!-- Although optional, you can bind the run goal to a lifecycle phase if desired -->
                <executions>
                    <execution>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Other plugins such as the dependency plugin can remain as-is -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.5.0</version>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Depend on core so the GUI can use its classes -->
        <dependency>
            <groupId>de.cesr</groupId>
            <artifactId>crafty-core</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <!-- JavaFX dependencies -->
        
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${javafx.version}</version>
            <classifier>${javafx.platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
            <classifier>${javafx.platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${javafx.version}</version>
            <classifier>${javafx.platform}</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
            <classifier>${javafx.platform}</classifier>
        </dependency>
        <!-- Other dependencies -->
        <dependency>
            <groupId>net.mahdilamb</groupId>
            <artifactId>colormap</artifactId>
            <version>0.9.511</version>
        </dependency>
        <dependency>
            <groupId>eu.hansolo.fx</groupId>
            <artifactId>charts</artifactId>
            <version>21.0.25</version>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-base</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-swing</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>2.0.24</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-javafx</artifactId>
            <version>12.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-fontawesome5-pack</artifactId>
            <version>12.3.1</version>
        </dependency>
    </dependencies>
</project>
